"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[4757],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=o.createContext({}),s=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,h=c["".concat(d,".").concat(m)]||c[m]||u[m]||i;return n?o.createElement(h,r(r({ref:t},p),{},{components:n})):o.createElement(h,r({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:a,r[1]=l;for(var s=2;s<i;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6988:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const i={title:"How To Download a File",slug:"2-download-a-file",number:2,publish_date:new Date("2016-06-11T00:00:00.000Z"),tags:["files","downloading","file download"],level:2,category:"testing"},r=void 0,l={unversionedId:"non-updated-tips/download-a-file/csharp/readme",id:"non-updated-tips/download-a-file/csharp/readme",title:"How To Download a File",description:"The Problem",source:"@site/docs/non-updated-tips/2-download-a-file/csharp/readme.md",sourceDirName:"non-updated-tips/2-download-a-file/csharp",slug:"/non-updated-tips/download-a-file/csharp/2-download-a-file",permalink:"/docs/non-updated-tips/download-a-file/csharp/2-download-a-file",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/non-updated-tips/2-download-a-file/csharp/readme.md",tags:[{label:"files",permalink:"/docs/tags/files"},{label:"downloading",permalink:"/docs/tags/downloading"},{label:"file download",permalink:"/docs/tags/file-download"}],version:"current",frontMatter:{title:"How To Download a File",slug:"2-download-a-file",number:2,publish_date:"2016-06-11T00:00:00.000Z",tags:["files","downloading","file download"],level:2,category:"testing"},sidebar:"tutorialSidebar",previous:{title:"How To Upload a File",permalink:"/docs/non-updated-tips/upload-a-file/csharp/1-upload-a-file"},next:{title:"How To Download a File",permalink:"/docs/non-updated-tips/download-a-file/java/2-download-a-file"}},d={},s=[{value:"The Problem",id:"the-problem",level:2},{value:"A Solution",id:"a-solution",level:2},{value:"An Example",id:"an-example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Outro",id:"outro",level:2}],p={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"the-problem"},"The Problem"),(0,a.kt)("p",null,"Just like with uploading files we hit the same issue with downloading them. A dialog box just out of Selenium's reach."),(0,a.kt)("h2",{id:"a-solution"},"A Solution"),(0,a.kt)("p",null,"With some additional configuration when setting up Selenium we can easily side-step the dialog box. This is done by instructing the browser to download files to a specific location without being prompted."),(0,a.kt)("p",null,"After the file is downloaded we can perform some simple checks to make sure the file is what we expect."),(0,a.kt)("p",null,"Let's dig in with an example."),(0,a.kt)("h2",{id:"an-example"},"An Example"),(0,a.kt)("p",null,"Let's start off by declaring our requisite classes for our testing framework (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"using NUnit.Framework"),"), driving the browser with Selenium (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"using OpenQA.Selenium"),", etc.), and leveraging common C# functions (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"using System.IO"),", etc.)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// filename: FileDownload.cs\nusing NUnit.Framework;\nusing OpenQA.Selenium;\nusing OpenQA.Selenium.Firefox;\nusing System.IO;\nusing System.Threading;\n// ...\n")),(0,a.kt)("p",null,"Now to create a class and add our test's setup."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'// filename: FileDownload.cs\npublic class FileDownload\n{\n    IWebDriver Driver;\n    string FolderPath;\n\n    [SetUp]\n    public void SetUp()\n    {\n        FolderPath = @"C:\\Temp\\" + System.Guid.NewGuid().ToString();\n        Directory.CreateDirectory(FolderPath);\n\n        FirefoxProfile Profile = new FirefoxProfile();\n        profile.SetPreference("browser.download.dir", FolderPath);\n        profile.SetPreference("browser.download.folderList", 2);\n        profile.SetPreference("browser.helperApps.neverAsk.saveToDisk",\n                              "image/jpeg, application/pdf, application/octet-stream");\n        profile.SetPreference("pdfjs.disabled", true);\n        Driver = new FirefoxDriver(Profile);\n    }\n// ...\n')),(0,a.kt)("p",null,"Our ",(0,a.kt)("inlineCode",{parentName:"p"},"SetUp()")," method is where the magic is happening in this example. In it we're creating a uniquely named temp directory (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"System.Guid.NewGuid().ToString();"),"), configuring a browser profile object (for Firefox in this case), and plying it with the necessary configuration parameters to make it automatically download the file where we want (e.g., in the newly created temp directory)."),(0,a.kt)("p",null,"Here's a breakdown of each of the browser preferences being set:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"browser.download.dir")," accepts a string. This is how we set the custom download path. It needs to be an absolute path."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"browser.download.folderList")," takes a number. It tells Firefox which download directory to use. ",(0,a.kt)("inlineCode",{parentName:"li"},"2")," tells it to use a custom download path, wheras ",(0,a.kt)("inlineCode",{parentName:"li"},"1")," would use the browser's default path, and ",(0,a.kt)("inlineCode",{parentName:"li"},"0")," would place them on the Desktop."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"browser.helperApps.neverAsk.saveToDisk")," tells Firefox when not to prompt for a file download. It accepts a string of ",(0,a.kt)("a",{parentName:"li",href:"http://en.wikipedia.org/wiki/Internet_media_type"},"the file's MIME type"),". If you want to specify more than one, you do it with a comma-separated string (which we've done)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pdfjs.disabled")," is for when downloading PDFs. This overrides the sensible default in Firefox that previews PDFs in the browser. It accepts a boolean.")),(0,a.kt)("p",null,"This profile object is then passed into our instance of Selenium (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"Driver = new FirefoxDriver(Profile);"),")."),(0,a.kt)("p",null,"Now let's take care of our test's teardown."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// filename: FileDownload.cs\n// ...\n    [TearDown]\n    public void TearDown()\n    {\n        Driver.Quit();\n        Directory.Delete(FolderPath, true);\n    }\n// ...\n")),(0,a.kt)("p",null,"In ",(0,a.kt)("inlineCode",{parentName:"p"},"TearDown()")," we close the browser instance and then clean up the temp directory by deleting it. Specifying ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," as a second parameter for ",(0,a.kt)("inlineCode",{parentName:"p"},"Directory.Delete()")," will recursively delete the files in the folder before deleting it."),(0,a.kt)("p",null,"Now to wire up our test."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'// filename: FileDownload.cs\n// ...\n    [Test]\n    public void DownloadFileToDisk()\n    {\n        Driver.Navigate().GoToUrl("http://the-internet.herokuapp.com/download");\n        Driver.FindElement(By.CssSelector(".example a")).Click();\n        Thread.Sleep(2000);\n\n        DirectoryInfo DownloadFolder = new DirectoryInfo(FolderPath);\n        Assert.IsTrue(DownloadFolder.GetFiles().Length > 0, "File not downloaded");\n        foreach(FileInfo file in DownloadFolder.GetFiles())\n        {\n            Assert.IsTrue(file.Length > 0, "File empty");\n        }\n    }\n}\n')),(0,a.kt)("p",null,"After visiting the page we find the first download link and click it. The click triggers an automatic download to the temp directory created in ",(0,a.kt)("inlineCode",{parentName:"p"},"SetUp()"),". We need to wait for the download to finish, so we add a brief sleep (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"Thread.sleep(2000);"),"). After the file downloads, we perform some rudimentary checks to make sure the unique temp directory isn't empty and then check the file (or files) to see that they aren't empty either."),(0,a.kt)("h2",{id:"expected-behavior"},"Expected Behavior"),(0,a.kt)("p",null,"When you save this file and run it (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"nunit3-console.exe .\\FileDownload.sln")," from the command-line) here is will happen:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a uniquely named temp directory in the present working directory"),(0,a.kt)("li",{parentName:"ul"},"Open the browser"),(0,a.kt)("li",{parentName:"ul"},"Visit the page"),(0,a.kt)("li",{parentName:"ul"},"Find and click the first download link on the page"),(0,a.kt)("li",{parentName:"ul"},"Automatically download the file to the temp directory without prompting"),(0,a.kt)("li",{parentName:"ul"},"Check that the temp directory is not empty"),(0,a.kt)("li",{parentName:"ul"},"Check that the downloaded file is not empty"),(0,a.kt)("li",{parentName:"ul"},"Close the browser"),(0,a.kt)("li",{parentName:"ul"},"Delete the temp directory")),(0,a.kt)("h2",{id:"outro"},"Outro"),(0,a.kt)("p",null,"A similar approach can be applied to some other browsers with varying configurations. But downloading files this way is not sustainable or recommended. Mark Collin articulates this point well in his prominent write-up about it ",(0,a.kt)("a",{parentName:"p",href:"http://ardesco.lazerycode.com/index.php/2012/07/how-to-download-files-with-selenium-and-why-you-shouldnt/"},"here"),". In a future tip I'll cover a more reliable, faster, and scalable browser agnostic approach to downloading files. Stay tuned."),(0,a.kt)("p",null,"Thanks to Jonathan Taylor for contributing the initial C# code for this tip!"),(0,a.kt)("p",null,"Happy Testing!"))}u.isMDXComponent=!0}}]);