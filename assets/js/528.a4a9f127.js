"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[528],{30528:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>h,frontMatter:()=>r,toc:()=>o});var a=n(87462),i=(n(67294),n(3905));const r={},l=void 0,o=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2},{value:"About The Author",id:"about-the-author",level:2}],s={toc:o},u="wrapper";function h(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"For our initial setup let's pull in our requisite libraries, declare our test class, and wire up some setup and teardown methods."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'// filename: test/highlight-elements.spec.js\nconst assert = require("assert");\nconst { Builder, By, Key } = require("selenium-webdriver");\n\ndescribe("Highlight elements", function() {\n  let driver;\n\n  beforeEach(async function() {\n    this.timeout(60000)\n    driver = await new Builder().forBrowser("firefox").build();\n  });\n\n  afterEach(async function() {\n    await driver.quit();\n  });\n// ...\n')),(0,i.kt)("p",null,"Now let's create a ",(0,i.kt)("inlineCode",{parentName:"p"},"highlight")," helper function that will accept a found ",(0,i.kt)("inlineCode",{parentName:"p"},"element")," from Selenium and a time to wait (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"duration"),") as arguments."),(0,i.kt)("p",null,"By setting a duration, we can control how long to highlight an element on the page before reverting the styling back. We can also make this an optional argument by setting a default value for it (e.g., 3 seconds)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'// filename: test/highlight-elements.spec.js\n// ...\n  async function highlight(element, duration = 2000) {\n    // store original style so it can be reset later\n    const originalStyle = await element.getAttribute("style");\n\n    // style element with callout (e.g., dashed red border)\n    await driver.executeScript(\n      "arguments[0].setAttribute(arguments[1], arguments[2])",\n      element,\n      "style",\n      "border: 2px solid red; border-style: dashed;"\n    );\n\n    // keep element highlighted for the duration and then revert\n    await driver.sleep(duration);\n    await driver.executeScript(\n      "arguments[0].setAttribute(arguments[1], arguments[2])",\n      element,\n      "style",\n      originalStyle\n    );\n  }\n// ...\n')),(0,i.kt)("p",null,"There are three things going on here."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"We store the style of the element so we can revert it back when we're done"),(0,i.kt)("li",{parentName:"ol"},"We change the style of the element so it visually stands out (e.g., a red dashed border)"),(0,i.kt)("li",{parentName:"ol"},"We revert the style of the element back after 3 seconds")),(0,i.kt)("p",null,"We're accomplishing the style change through JavaScript's ",(0,i.kt)("inlineCode",{parentName:"p"},"setAttribute")," function. And we're executing it with Selenium's ",(0,i.kt)("inlineCode",{parentName:"p"},"executeScript")," command."),(0,i.kt)("p",null,"Now to use this in our test is simple, we just prepend a ",(0,i.kt)("inlineCode",{parentName:"p"},"findElement")," command with a call to the ",(0,i.kt)("inlineCode",{parentName:"p"},"highlight")," method."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'// filename: test/highlight-elements.spec.js\n// ...\n  it("highlights target element", async function() {\n    await driver.get("http://the-internet.herokuapp.com/large");\n    await highlight(await driver.findElement(By.id("sibling-2.3")));\n  });\n});\n')),(0,i.kt)("h2",{id:"expected-behavior"},"Expected Behavior"),(0,i.kt)("p",null,"When we save this file and run it (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"mocha")," from the command-line) here is what will happen."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Browser opens"),(0,i.kt)("li",{parentName:"ul"},"Load the page"),(0,i.kt)("li",{parentName:"ul"},"Find the element"),(0,i.kt)("li",{parentName:"ul"},"Change the styling of the element so it has a red dashed-line border"),(0,i.kt)("li",{parentName:"ul"},"Wait 3 seconds"),(0,i.kt)("li",{parentName:"ul"},"Revert the styling to remove the border"),(0,i.kt)("li",{parentName:"ul"},"Browser closes")),(0,i.kt)("h2",{id:"summary"},"Summary"),(0,i.kt)("p",null,"If you wanted to take this a step further, you could leverage this approach along with an interactive debugger."),(0,i.kt)("p",null,"Alternatively, you could verify your locators by using a browser plugin like FireFinder."),(0,i.kt)("p",null,"Happy Testing!"),(0,i.kt)("h2",{id:"about-the-author"},"About The Author"),(0,i.kt)("p",null,"You can follow Brian on Twitter at ",(0,i.kt)("a",{parentName:"p",href:"https://twitter.com/bbbco"},"@bbbco"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Brian D. Goad profile picture",src:n(93330).Z+"#author-img",title:"a title",width:"400",height:"400"})))}h.isMDXComponent=!0},93330:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/brian-goad-f109f0435f7d26dd999383b3b4ba1994.jpeg"}}]);