"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[4992],{4992:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>h,frontMatter:()=>r,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={},o=void 0,p=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}],s={toc:p},l="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(l,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"Our example page is from ",(0,i.kt)("a",{parentName:"p",href:"http://github.com/tourdedave/the-internet"},"the-internet")," and can be seen ",(0,i.kt)("a",{parentName:"p",href:"http://the-internet.herokuapp.com/abtest"},"here"),". There are three different variants of the page that are available, each with different heading text:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Control: ",(0,i.kt)("inlineCode",{parentName:"li"},"A/B Test Control")),(0,i.kt)("li",{parentName:"ul"},"Variation 1: ",(0,i.kt)("inlineCode",{parentName:"li"},"A/B Test Variation 1")),(0,i.kt)("li",{parentName:"ul"},"Opt-out: ",(0,i.kt)("inlineCode",{parentName:"li"},"No A/B Test"))),(0,i.kt)("p",null,"Let's start by importing our requisite classes (for annotations (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"org.junit.After"),", etc.), driving the browser with Selenium (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"org.openqa.selenium.WebDriver"),", etc.), and matchers for our assertions (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"org.hamcrest.CoreMatchers"),", etc.)) and start our class with some setup and teardown methods."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// filename: ABTestOptOut.java\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.Cookie;\nimport org.openqa.selenium.firefox.FirefoxDriver;\nimport static org.hamcrest.CoreMatchers.*;\nimport static org.hamcrest.MatcherAssert.assertThat;\n\npublic class ABTestOptOut {\n\n    WebDriver driver;\n\n    @Before\n    public void setUp() throws Exception {\n        driver = new FirefoxDriver();\n    }\n\n    @After\n    public void tearDown() throws Exception {\n        driver.quit();\n    }\n// ...\n")),(0,i.kt)("p",null,"Now let's wire up our first test to step through visiting the page and verifying that the text changes as we forge an opt-out cookie."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// filename: ABTestOptOut.java\n// ...\n    @Test\n    public void WithCookieAfterVisitingPage() {\n        driver.get("http://the-internet.herokuapp.com/abtest");\n        String headingText = driver.findElement(By.tagName("h3")).getText();\n        assertThat(headingText, startsWith("A/B Test"));\n        driver.manage().addCookie(new Cookie("optimizelyOptOut", "true"));\n        driver.navigate().refresh();\n        headingText = driver.findElement(By.cssSelector("h3")).getText();\n        assertThat(headingText, is("No A/B Test"));\n    }\n// ...\n')),(0,i.kt)("p",null,"After navigating to the page we confirm that we are in one of the A/B test groups by grabbing the heading text and checking to see if it starts with the text ",(0,i.kt)("inlineCode",{parentName:"p"},'"A/B Test"'),". After that we add the opt-out cookie, refresh the page, and then confirm that we are no longer in the A/B test group by checking the heading text again."),(0,i.kt)("p",null,"We could also load the opt-out cookie ",(0,i.kt)("em",{parentName:"p"},"before")," navigating to the page."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// filename: ABTestOptOut.java\n// ...\n    @Test\n    public void WithCookieBeforeVisitingPage() {\n        driver.get("http://the-internet.herokuapp.com");\n        driver.manage().addCookie(new Cookie("optimizelyOptOut", "true"));\n        driver.get("http://the-internet.herokuapp.com/abtest");\n        assertThat(driver.findElement(By.cssSelector("h3")).getText(), is("No A/B Test"));\n    }\n// ...\n')),(0,i.kt)("p",null,"Here we are navigating to the main page of the site first (to establish the host) and then adding the opt-out cookie. If we didn't visit the site first, then adding the cookie wouldn't have worked. Once added, we navigate to the example page and perform our checks just like before."),(0,i.kt)("p",null,"Alternatively, we can achieve the same thing without forging a cookie. Instead we can append an opt-out query to the URL when visiting the page."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// filename: ABTestOptOut.java\n// ...\n    @Test\n    public void WithOptOutUrl() {\n        driver.get("http://the-internet.herokuapp.com/abtest?optimizely_opt_out=true");\n        driver.switchTo().alert().dismiss();\n\n        Thread.sleep(2000);\n        assertThat(driver.findElement(By.cssSelector("h3")).getText(), is("No A/B Test"));\n        Thread.sleep(2000);\n    }\n\n}\n')),(0,i.kt)("p",null,"By appending ",(0,i.kt)("inlineCode",{parentName:"p"},"?optimizely_opt_out=true")," we achieve the same outcome as before. Keep in mind that this approach triggers a JavaScript alert, so we have to switch to and dismiss it (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"driver.switchTo().alert().dismiss();"),") before performing our check."),(0,i.kt)("h2",{id:"expected-behavior"},"Expected Behavior"),(0,i.kt)("p",null,"When you save this file and run it (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"mvn clean test")," from the command-line) here is what will happen:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Open the browser"),(0,i.kt)("li",{parentName:"ul"},"Opt-out of the split tests (either by cookie or appended URL)"),(0,i.kt)("li",{parentName:"ul"},"Visit the split testing page"),(0,i.kt)("li",{parentName:"ul"},"Grab the header text"),(0,i.kt)("li",{parentName:"ul"},"Confirm that the session is opted out of the split tests"),(0,i.kt)("li",{parentName:"ul"},"Close the browser")),(0,i.kt)("h2",{id:"summary"},"Summary"),(0,i.kt)("p",null,"Hopefully this tip was helpful in guiding you in different methods of how to opt out of split tests."),(0,i.kt)("p",null,"Happy Testing!"))}h.isMDXComponent=!0}}]);